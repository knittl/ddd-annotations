plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'com.github.knittl'
version '0.0.2-SNAPSHOT'
ext.isSnapshotVersion = version.endsWith('-SNAPSHOT')

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
    withJavadocJar()
    withSourcesJar()
}

// task javadocJar(type: Jar) {
//     archiveClassifier.set('javadoc')
//     from javadoc
// }

// task sourcesJar(type: Jar) {
//     archiveClassifier.set('sources')
//     from sourceSets.main.allSource
// }

// artifacts {
//     archives javadocJar, sourcesJar
// }

javadoc {
    options.addBooleanOption('html5', true)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'DDD Annotations'
                description = 'Seamlessly generate documentation for your domain-driven-design projects'
                packaging = 'jar'
                url = 'https://github.com/knittl/ddd-annotations'

                scm {
                    url = 'https://github.com/knittl/ddd-annotations'
                    connection = 'scm:git:https://github.com/knittl/ddd-annotations.git'
                    developerConnection = 'scm:git:git@github.com:knittl/ddd-annotations.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'knittl'
                        name = 'Daniel Knittl-Frank'
                        url = 'https://github.com/knittl'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releaseUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url = isSnapshotVersion ? snapshotUrl : releaseUrl
            credentials {
                username System.env.MAVEN_USR
                password System.env.MAVEN_PWD
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(System.env.MAVEN_SIGN_ID, System.env.MAVEN_SIGN_KEY, System.env.MAVEN_SIGN_PWD)
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { !isSnapshotVersion }
}
